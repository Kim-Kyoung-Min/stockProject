<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- parameterType의 생략이 가능하다 #{title}은 parameter로 전달된 getTitle()메서드를 호출한다. -->
<mapper namespace="stock">
<resultMap type="stock" id="st"></resultMap>

	<select id="getHoldingStock" resultType="map">
		select stockName, quantity from holdingstock where id = #{id} and quantity > 0;
	</select>
	
	<update id="modify">
		update unsettled set quantity = #{newQuantity} where uno = #{uno};
		update unsettledcheck set rPrice = #{newPrice} where uno = #{uno};
	</update>
	
	<update id="modifyHoldingStock">
		update holdingstock set quantity = quantity - #{newQuantity} + #{quantity} where id =  #{id} and stockName = #{stockName}
	</update>
	
	<update id="modifyMoney">
		update usermoney set money = money + #{quantity}* #{rPrice} - #{newQuantity} * #{newPrice} where id = #{id}
	</update>

	<delete id="cancleUnsettled_ALL">
		delete from unsettled where uno = #{uno};
		delete from unsettledcheck where uno = #{uno};
	</delete>
	
	<update id="cancleUnsettled">
		update unsettled set quantity = quantity - #{quantity} where uno = #{uno};
	</update>

	<select id="getUnsettledDetail" resultType="map">
		select c.uno , quantity, category , rPrice , stockName from unsettled u join unsettledcheck c on c.uno = u.uno where id = #{id} and c.uno = #{uno};
	</select>

	<select id="getUnsettled" resultType="map">
		SELECT * from unsettledcheck
	</select>
	
	<select id="getUnsettled_ID" resultType="map">
		SELECT stockName , u.uno , category , rPrice, quantity  FROM unsettled u join unsettledcheck c on c.uno = u.uno where id = #{id} order by u.uno desc;
	</select>
	
	<select id="dayChart" resultType="map">
		SELECT * from daychart where stockname = #{stockname};
	</select>
	
	<select id="minuteChart" resultType="map">
		SELECT * from minutechart where stockname = #{stockname};
	</select>
	
	
	<select id="completeUnsettled" resultMap="st">
		SELECT * from unsettled
		where uno=#{uno}
	</select>
	
	<select id="getStockQuantity" resultType="int">
		select quantity from holdingstock where id = #{id} and stockName = #{stockName}
	</select>
	
	<insert id="buying">
		insert into tradinghistory(id, stockName, category, tdatetime, tprice, quantity)
		values(#{id}, #{stockName}, #{category}, NOW(), #{rPrice}, #{quantity});
		INSERT INTO stocknotice(id, tno)
		SELECT id, tno
		FROM tradinghistory as td
		WHERE td.tno = (select max(tno) from tradinghistory);
	</insert>
	
	<update id="updateMoney">
		update usermoney 
		set money = money + #{rPrice}*#{quantity}*#{buysell}
		where id = #{id};
	</update>
	
	
	<insert id="preBuying">
		insert into unsettledcheck(stockName, rPrice) values(#{stockName}, #{rPrice});
		insert into unsettled(id, quantity, category) values(#{id}, #{quantity}, "buy");
	</insert>
	
	<insert id="preSelling">
		insert into unsettledcheck(stockName, rPrice) values(#{stockName}, #{rPrice});
		insert into unsettled(id, quantity, category) values(#{id}, #{quantity}, "sell");
	</insert>
	
	<insert id="insertHoldingstock">
		insert into holdingstock(id , stockName, quantity) values (#{id}, #{stockName},#{quantity})
	</insert>
	
	<update id="updateHoldingstock">
		update holdingstock set quantity = quantity + #{quantity} * #{buysell} where id = #{id} and stockName = #{stockName}
	</update>
	
	
	<insert id="selling">
		insert into tradinghistory(id, stockName, category, tdatetime, tprice, quantity)
		values(#{id}, #{stockName}, #{category}, NOW(), #{rPrice}, #{quantity});
		
		INSERT INTO stocknotice(id, tno)
		SELECT id, tno
		FROM tradinghistory as td
		WHERE td.tno = (select max(tno) from tradinghistory);
	</insert>
	
	
	<delete id="delUnsettled">
		DELETE FROM unsettled WHERE uno=#{uno};
		DELETE FROM unsettledcheck WHERE uno = #{uno};
	</delete>
	
	<select id="stockCode" resultType="String">
	  	SELECT stockCode 
	  	FROM stockList
	  	WHERE stockname = #{stockname}
  </select>
  
  <select id="getMoney" resultType="long">
  	select money from usermoney where id = #{id}
  </select>
  
  <select id="getHistory" resultType="map">
  	select * from tradinghistory where id = #{id} order by tno desc;
  </select>


</mapper>

  
  