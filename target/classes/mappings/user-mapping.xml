<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- parameterType의 생략이 가능하다
	#{title}은 parameter로 전달된 getTitle()메서드를 
	호출한다.
 -->
<mapper namespace="user">

	<!-- 컬럼이름과 자바객체의 프로퍼티명이 다를 때는
	     아래처럼 매핑 규칙을 정해줘야 한다 -->
<!-- 	<resultMap id="userResult" type="user">
		<id property="id" column="ID"/>
		<result property="pw" column="PW"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="tel" column="TEL"/>
		<result property="point" column="POINT"/>
		<result property="showEsetSetting" column="SHOWESETSETTING"/>
		<result property="address" column="ADDRESS"/>
		<result property="charge" column="CHARGE"/>
	</resultMap> -->
	
	<select id="getTradeNotice" resultType="map">
			select notice.tno, stockName, category, tdatetime, tprice,quantity from stocknotice as notice join tradinghistory as td on td.tno = notice.tno where td.id = #{id} order by notice.tno desc;
	</select>
	
	<select id="getCommentNotice" resultType="map">
			
	</select>
	

	<insert id="signUp">
		INSERT INTO user(id, pw, nickname, tel, point, showEsetSetting, address, charge)
		VALUES(#{id}, #{pw}, #{nickname}, #{tel}, 10000000, #{showEsetSetting}, #{address}, 1);
		
		
		<!-- sql 두개 쓰려면 ; 붙여줘야한다 -->
		INSERT INTO usernickname(id, nickname)
		VALUES(#{id}, #{nickname});
		
		
		INSERT INTO usermoney(id, money)
		VALUES(#{id}, 1000);
	</insert>
	
	<select id="idCheck" resultType="int" parameterType="map">
		SELECT COUNT(*) 
		FROM user
		
		<choose>
			<when test='id != null and id !="" '>
				WHERE id = #{id}
			</when>
			<when test='nickname != null and nickname !="" '>
				WHERE nickname = #{nickname}
			</when>
		</choose>
		
		
	</select>
	
	<update id="pointUp" parameterType="user">
		UPDATE user 
		SET point = point+1000
		WHERE id IN (#{friend}, #{id})
	</update>
	
	<!-- 로그인시 id and pw틀렸는지 체크 SignInDAO.login -->
	<select id="signInCheck" parameterType="user" resultType="user">
		SELECT *
		FROM user
		WHERE id = #{id}
	</select>
	<!-- 아이디찾기 -->
	<select id="findId" parameterType="user" resultType="user">
		SELECT *
		FROM user
		WHERE tel=#{tel}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="findPassword" parameterType="user" resultType="user">
		SELECT *
		FROM user
		WHERE id=#{id} 
	</select>
	<!-- 비밀번호 변경 -->
	<update id="updatePassword" parameterType="user">
		update user
		set pw=#{pw}
		where id=#{id}
	</update>
	
	<!-- 개인정보 수정하는 SQL UserInfoDAO.userInfoUpdate -->
	<update id="updateUser" parameterType="user">
		update user
		set PW=#{pw}, ADDRESS=#{address}, TEL=#{tel}, showEsetSetting=#{showEsetSetting}
		where ID=#{id}
	</update>
	
	
	<!-- <insert id="nickname">
	</insert> -->
	
	<!-- <update id="updateBoard">
		update board set TITLE=#{title},
		CONTENT=#{content} where SEQ=#{seq}
	</update>
	
	<delete id="deleteBoard">
		delete board where SEQ=#{seq}
	</delete> -->
	
	<!-- CDATA영역에 작성된 데이터는 단순 문자 데이터이다
	     그러므로 XML 파서는 처리하지 말아라. -->
	<!-- <select id="getBoardLt" resultType="board">
		<![CDATA[
		select * from board where SEQ <= #{seq}
		]]>
	</select> -->
		
	<!-- <select id="getBoardList_T" resultType="board">
		select * from board
		where TITLE like '%'||#{searchKeyword}||'%'
		order by SEQ desc
	</select>

	<select id="getBoardList_C" resultType="board">
		select * from board
		where CONTENT like '%'||#{searchKeyword}||'%'
		order by SEQ desc
	</select> -->

	<!-- <select id="getBoardList" resultType="board">
		select * from board
		where 1=1
		<if test="searchCondition == 'title'">
			and TITLE like '%'||#{searchKeyword}||'%'
		</if>
		<if test="searchCondition == 'content'">
			and CONTENT like '%'||#{searchKeyword}||'%'
		</if> 
		order by SEQ desc
	</select> -->
</mapper>






















